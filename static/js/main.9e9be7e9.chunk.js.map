{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","APIService/APIservice.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","ImagesError/ImagesError.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","Searchbar","state","searchQuery","handleChange","e","value","currentTarget","setState","reset","handleSubmit","preventDefault","newSearch","trim","toLowerCase","props","onSubmit","alert","className","s","searchbar","logo","href","src","alt","width","this","searchForm","type","searchFormButton","size","searchFormButtonLabel","searchFormInput","autoComplete","onChange","pattern","autoFocus","placeholder","Component","prototypes","PropTypes","func","api","fetchImg","page","url","fetch","then","response","json","data","catch","error","console","worm","Modal","escFunction","bind","event","keyCode","closeModal","document","addEventListener","removeEventListener","createPortal","overlay","modal","children","getElementById","protoType","ImageGalleryItem","images","useState","stateModal","setStateModal","urlImgModal","setUrlImgModal","openModal","target","dataset","map","image","imageGalleryItem","onClick","imageGalleryItemImage","largeImageURL","webformatURL","tag","id","array","ImagesError","errorQuery","errorSearchQuery","string","Button","addImages","pages","currentPage","message","disabled","button","ImageGallery","setImages","imagesTotal","setImagesTotal","status","setStatus","setCurrentPage","useEffect","imagesAPI","total","log","hits","totalHits","availablePages","Math","ceil","sl","loader","color","height","timeout","imageGallery","finally","window","scrollTo","top","documentElement","scrollHeight","behavior","App","formSubmitHandler","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9e9be7e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3Uceg\",\"modal\":\"Modal_modal__2slb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__2cjH6\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__3YIb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1Qw6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2d4NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1nrf2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__iueXA\",\"logo\":\"Searchbar_logo__1Owml\",\"searchForm\":\"Searchbar_searchForm__NXg8G\",\"searchFormButton\":\"Searchbar_searchFormButton__2yJSd\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__1TT_Y\",\"searchFormInput\":\"Searchbar_searchFormInput__aDbFG\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"../Searchbar/Searchbar.module.css\";\nimport { BiSearchAlt } from \"react-icons/bi\";\n\nclass Searchbar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  handleChange = (e) => {\n    const { value } = e.currentTarget;\n    this.setState({ searchQuery: value });\n  };\n\n  reset = () => {\n    this.setState({ searchQuery: \"\" });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { searchQuery } = this.state;\n\n    const newSearch = searchQuery.trim().toLowerCase();\n\n    if (newSearch === \"\") {\n      alert(\"Input is empty\");\n      return;\n    }\n\n    this.props.onSubmit(newSearch);\n\n    this.reset();\n  };\n\n  render() {\n    return (\n      <header className={s.searchbar}>\n        <div className={s.logo}>\n          <a href=\"https://pixabay.com/\">\n            <img\n              src=\"https://pixabay.com/static/img/public/medium_rectangle_a.png\"\n              alt=\"Pixabay\"\n              width=\"48\"\n            />\n          </a>\n        </div>\n\n        <form onSubmit={this.handleSubmit} className={s.searchForm}>\n          <button type=\"submit\" className={s.searchFormButton}>\n            <BiSearchAlt size=\"20\" />\n            <span className={s.searchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.searchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            value={this.state.searchQuery}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n\nSearchbar.prototypes = {\n  onSubmit: PropTypes.func,\n};\n","const BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"22960570-8de4834e5e1a62c8570402763\";\n\nfunction fetchImg(searchQuery, page) {\n  const url = `${BASE_URL}?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`;\n\n  return fetch(url)\n    .then((response) => response.json())\n\n    .then((data) => data)\n\n    .catch((error) => console.worm(error));\n}\n\nconst api = { fetchImg };\n\nexport default api;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./Modal.module.css\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.escFunction = this.escFunction.bind(this);\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      this.props.closeModal();\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return createPortal(\n      <div className={s.overlay}>\n        <div className={s.modal}>{this.props.children}</div>\n      </div>,\n\n      document.getElementById(\"modal-root\")\n    );\n  }\n}\n\nModal.protoType = {\n  closeModal: PropTypes.func,\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"../Modal/Modal\";\n\nimport s from \"./ImageGalleryItem.module.css\";\n\nfunction ImageGalleryItem({ images }) {\n  const [stateModal, setStateModal] = useState(false);\n  const [urlImgModal, setUrlImgModal] = useState(\"\");\n\n  // console.log(images)\n\n  const openModal = (e) => {\n    setStateModal(true);\n    setUrlImgModal(e.target.dataset.url);\n  };\n\n  const closeModal = (e) => {\n    setStateModal(false);\n  };\n\n  return (\n    <>\n      {images.map((image) => (\n        <li className={s.imageGalleryItem} key={image.id}>\n          <img\n            onClick={openModal}\n            className={s.imageGalleryItemImage}\n            data-url={image.largeImageURL}\n            src={image.webformatURL}\n            alt={image.tag}\n          />\n        </li>\n      ))}\n\n      {stateModal && (\n        <Modal closeModal={closeModal}>\n          <img src={urlImgModal} alt=\"\" />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nImageGalleryItem.protoType = {\n  images: PropTypes.array,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\n\nfunction ImagesError({ errorQuery }) {\n  return <p>Images with the name \"{errorQuery}\" were not found, try again! </p>;\n}\n\nImagesError.protoType = {\n  errorSearchQuery: PropTypes.string,\n};\n\nexport default ImagesError;\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nfunction Button({ addImages, pages, currentPage }) {\n  const message = currentPage < pages ? \"Load more...\" : \"That's all\";\n\n  const disabled = currentPage < pages ? false : true;\n\n  return (\n    <button\n      type=\"button\"\n      className={s.button}\n      onClick={() => addImages()}\n      disabled={disabled}\n    >\n      {message}\n    </button>\n  );\n}\n\nButton.protoType = {\n  addImages: PropTypes.func,\n  pages: PropTypes.string,\n};\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"react-loader-spinner\";\n\nimport imagesAPI from \"../../APIService/APIservice\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport ImagesError from \"../../ImagesError/ImagesError\";\nimport Button from \"../Button/Button\";\n\nimport s from \"../ImageGallery/ImageGallery.module.css\";\nimport sl from \"../Loader/Loader.module.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nfunction ImageGallery({ searchQuery }) {\n  const [images, setImages] = useState([]);\n  const [imagesTotal, setImagesTotal] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery !== \"\") {\n      setStatus(\"pending\");\n\n      imagesAPI\n        .fetchImg(searchQuery, currentPage)\n\n        .then((data) => {\n          if (data.total !== 0) {\n            // setImagesTotal(images.totalHits)\n            console.log(data);\n\n            return (\n              setImages(data.hits),\n              setImagesTotal(data.totalHits),\n              setStatus(\"resolved\")\n            );\n          }\n\n          return setStatus(\"rejected\");\n        });\n      // .catch(error => console.log(error))\n      // .catch(error =>setError( error ), setStatus( 'rejected' ))\n    }\n  }, [currentPage, searchQuery]);\n\n  const addImages = () => {\n    setStatus(\"pending\");\n\n    // const {  searchQuery, currentPage } = this.state;\n    // let nextPage = currentPage + 1;\n    setCurrentPage(currentPage + 1);\n\n    // ===========\n    // imagesAPI\n    // .fetchImg(searchQuery, currentPage)\n\n    // .then(data => {\n\n    //     if (data.total !== 0) {\n\n    //         // setImagesTotal(images.totalHits)\n    //         console.log(data)\n\n    //         return (setImages(data.hits),\n    //             setImagesTotal(data.totalHits),\n    //             setStatus('resolved')\n    //         )\n    //     }\n    //     return setStatus( 'rejected');\n    // })\n\n    // ================\n\n    imagesAPI\n\n      .fetchImg(searchQuery, currentPage)\n\n      // .then( data => {\n      //     return (setImages([...images, ...data.hits]),\n      //         setStatus('resolved'),\n      //         setCurrentPage(currentPage + 1)\n      //     )\n\n      // console.log('data2',data)\n      // return data;\n\n      // };\n      // })\n      .then((data) => {\n        setImages([...images, ...data.hits]);\n        setStatus(\"resolved\");\n        setCurrentPage(currentPage + 1);\n        return data;\n      })\n\n      \n\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      });\n  };\n\n  // render() {\n  // const { images, status, imagesTotal, currentPage } = this.state;\n\n  // const { searchQuery } = this.props;\n\n  const availablePages = Math.ceil(imagesTotal / 12);\n\n  if (status === \"idle\") {\n    return <div>Input search name, please</div>;\n  }\n\n  if (status === \"pending\") {\n    return (\n      <Loader\n        className={sl.loader}\n        type=\"BallTriangle\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    );\n  }\n\n  if (status === \"rejected\") {\n    return <ImagesError errorQuery={searchQuery} />;\n  }\n\n  if (status === \"resolved\" && availablePages > 1) {\n    return (\n      <>\n        <ul className={s.imageGallery}>\n          <ImageGalleryItem images={images} />\n        </ul>\n\n        <Button\n          pages={availablePages}\n          currentPage={currentPage}\n          addImages={addImages}\n        />\n      </>\n    );\n  }\n\n  if (status === \"resolved\" || availablePages === 1) {\n    return (\n      <ul className={s.imageGallery}>\n        <ImageGalleryItem images={images} />\n      </ul>\n    );\n  }\n}\n// }\n\nImageGallery.prototypes = {\n  searchQuery: PropTypes.string,\n};\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\n\nclass App extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  formSubmitHandler = (newSearch) => {\n    this.setState({ searchQuery: newSearch });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.formSubmitHandler} />\n\n        <ImageGallery searchQuery={this.state.searchQuery} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}